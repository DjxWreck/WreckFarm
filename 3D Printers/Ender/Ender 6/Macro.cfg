[gcode_macro G29]				
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  bed_mesh_calibrate
  G1 X0 Y0 Z10 F4200

[pause_resume]

[exclude_object]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 6.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 50.0) %}
      {% set z_safe = 50.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  END_PRINT
  CANCEL_PRINT_BASE

[gcode_macro END_PRINT]
description: End G-Code
gcode:
  M106 S0 ;Turn-off fan
  M104 S0 ;Turn-off hotend
  M140 S0 ;Turn-off bed
  
  G91 ;Relative positioning
  G1 F1800 E-10 ; Retract filament 10 mm to prevent oozing
  G1 F3000 Z10 ; Move Z Axis up 10 mm to allow filament ooze freely
  
  G90 ;Absolute positionning
  
  G1 X10 Y{printer.toolhead.axis_minimum.y} F9000;Present print
  
  M84 ; disable motors

[gcode_macro TIMELAPSE_TAKE_FRAME]
description: Timelapse Take Frame
gcode:
  {% set zhop = params.ZHOP|default(1.2)|float %}
  {% set retraction = params.RETRACTION|default(6)|float %}
  {% set wait = params.RETRACTION|default(300)|int %}
  G91 ;Relative Positioning including extruder
  G1 F1800 E-{retraction} ;Retract filament
  M400 ;Wait for moves to finish
  G1 F1800 Z{zhop} ;Z-Hop
  M400 ;Wait for moves to finish
  G90  ;Absolute Positioning including extruder
  {% set toolhead = printer.toolhead %}
  {% set x = toolhead.position.x %}
  {% set y = toolhead.position.y %}
  {% set z = toolhead.position.z %}
  G1 F15000 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} ;Park print head
  M400 ;Wait for moves to finish
  G1 F15000 X{printer.toolhead.axis_maximum.x-1} ;Realease trigger
  M400 ;Wait for moves to finish
  G4 P{wait}; Wait for camera
  G1 F15000 X{x} Y{y}
  M400 ;Wait for moves to finish
  G91 ;Relative Positioning including extruder
  G1 F1800 E{retraction} Z-{zhop} ;UnZ-Hop and Unretract filament
  G90 ;Absolute Positioning including extruder


[gcode_macro START_PRINT]
description: Start G-Code
gcode:
  M300
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
  BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
  M104 S{EXTRUDER_TEMP}
  M140 S{BED_TEMP}
  M190 S{BED_TEMP}
  M109 S{EXTRUDER_TEMP}
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}
  #BED_TILT_CALIBRATE
  #G92 E0
  #G1 X3 Y10 Z0.3 F3000
  #G1 X3 Y40 E25 F180                       
  #G92 E0
  #G1 Z2.0 F180 ; move z up little to prevent scratching of surface

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}

# Park front center
[gcode_macro PARKFRONT]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000        
    RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro M600]
gcode:
  PAUSE

[gcode_macro SAVE]
description: Save Configuration
gcode:
  SAVE_CONFIG


[gcode_macro bed_calibrate_heated] #Creating bed mesh with heated hotend and bed
gcode:
  G28
  M104 S200
  M140 S60
  M109 S200
  M190 S60
  BED_MESH_CALIBRATE
  M104 S0
  M140 S0

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=load_state
    M300 # beep
    G91
    G92 E0
    SET_PIN PIN=power_ctrl VALUE=1
    M104 S200 ; set extruder temp
    M109 S200 ; wait for extruder temp
    G1 E350 F{max_velocity} # fast-load
    G1 E25 F{speed} # purge
    SET_PIN PIN=power_ctrl VALUE=0
    M300
    M300
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    M300 # beep
    G92 E0
    SET_PIN PIN=power_ctrl VALUE=1
    M104 S200 ; set extruder temp
    M109 S200 ; wait for extruder temp
    G1 E25 F{speed} # purge
    G1 E-420 F{max_velocity} # fast-unload
    SET_PIN PIN=power_ctrl VALUE=0
    M300
    M300
    RESTORE_GCODE_STATE NAME=unload_state




# Client variable macro for your printer.cfg
#[gcode_macro _CLIENT_VARIABLE]
   # variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
   # variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
   # variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
   # variable_custom_park_dz   : 10.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
  #  variable_retract          : 1.0   ; the value to retract while PAUSE
  #  variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
  #  variable_speed_retract    : 35.0  ; retract speed in mm/s
  #  variable_unretract        : 1.0   ; the value to unretract while RESUME
  #  variable_speed_unretract  : 35.0  ; unretract speed in mm/s
 #   variable_speed_hop        : 15.0  ; z move speed in mm/s
 #   variable_speed_move       : 200.0 ; move speed in mm/s
  #  variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
  #  variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
  #  variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
 #   variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
  #  variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
  #  variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
#                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
# !!! Custom macros, please use with care and review the section of the corresponding macro.
# These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
# Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything insight the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything insight the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything insight the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
#gcode:
